{"ast":null,"code":"var _jsxFileName = \"/Users/ajthkumargani/Documents/reactjs-repo/01-starting-setup/src/components/UI/DraggableDiv.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DraggableDiv = () => {\n  _s();\n  const divRef = useRef(null);\n\n  // Event handler for drag start\n  const handleDragStart = e => {\n    e.dataTransfer.setData('text/plain', ''); // Necessary for drag to work in some browsers\n    divRef.current.classList.add('dragging');\n  };\n\n  // Event handler for drag end\n  const handleDragEnd = () => {\n    divRef.current.classList.remove('dragging');\n  };\n\n  // Event handler for paste or drop\n  const handlePasteOrDrop = e => {\n    e.preventDefault();\n    const items = e.clipboardData.items || e.dataTransfer.items;\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n      if (item.type.indexOf('image') !== -1) {\n        const blob = item.getAsFile();\n        const imageUrl = URL.createObjectURL(blob);\n\n        // Create an image element and append it to the div\n        const img = document.createElement('img');\n        img.src = imageUrl;\n        divRef.current.appendChild(img);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: divRef,\n    className: \"draggable-div\",\n    draggable: \"true\",\n    onDragStart: handleDragStart,\n    onDragEnd: handleDragEnd,\n    onPaste: handlePasteOrDrop,\n    onDrop: handlePasteOrDrop,\n    children: \"Drag me and paste or drop images here.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(DraggableDiv, \"MAMAaDT8oTSNqTzyXCTKnOxvYEU=\");\n_c = DraggableDiv;\nexport default DraggableDiv;\nvar _c;\n$RefreshReg$(_c, \"DraggableDiv\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","DraggableDiv","_s","divRef","handleDragStart","e","dataTransfer","setData","current","classList","add","handleDragEnd","remove","handlePasteOrDrop","preventDefault","items","clipboardData","i","length","item","type","indexOf","blob","getAsFile","imageUrl","URL","createObjectURL","img","document","createElement","src","appendChild","ref","className","draggable","onDragStart","onDragEnd","onPaste","onDrop","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ajthkumargani/Documents/reactjs-repo/01-starting-setup/src/components/UI/DraggableDiv.js"],"sourcesContent":["import React, { useRef } from 'react';\n\nconst DraggableDiv = () => {\n  const divRef = useRef(null);\n\n  // Event handler for drag start\n  const handleDragStart = (e) => {\n    e.dataTransfer.setData('text/plain', ''); // Necessary for drag to work in some browsers\n    divRef.current.classList.add('dragging');\n  };\n\n  // Event handler for drag end\n  const handleDragEnd = () => {\n    divRef.current.classList.remove('dragging');\n  };\n\n  // Event handler for paste or drop\n  const handlePasteOrDrop = (e) => {\n    e.preventDefault();\n\n    const items = e.clipboardData.items || e.dataTransfer.items;\n\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n      if (item.type.indexOf('image') !== -1) {\n        const blob = item.getAsFile();\n        const imageUrl = URL.createObjectURL(blob);\n\n        // Create an image element and append it to the div\n        const img = document.createElement('img');\n        img.src = imageUrl;\n        divRef.current.appendChild(img);\n      }\n    }\n  };\n\n  return (\n    <div\n      ref={divRef}\n      className=\"draggable-div\"\n      draggable=\"true\"\n      onDragStart={handleDragStart}\n      onDragEnd={handleDragEnd}\n      onPaste={handlePasteOrDrop}\n      onDrop={handlePasteOrDrop}\n    >\n      Drag me and paste or drop images here.\n    </div>\n  );\n};\n\nexport default DraggableDiv;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,MAAM,GAAGL,MAAM,CAAC,IAAI,CAAC;;EAE3B;EACA,MAAMM,eAAe,GAAIC,CAAC,IAAK;IAC7BA,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC;IAC1CJ,MAAM,CAACK,OAAO,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;EAC1C,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BR,MAAM,CAACK,OAAO,CAACC,SAAS,CAACG,MAAM,CAAC,UAAU,CAAC;EAC7C,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAIR,CAAC,IAAK;IAC/BA,CAAC,CAACS,cAAc,CAAC,CAAC;IAElB,MAAMC,KAAK,GAAGV,CAAC,CAACW,aAAa,CAACD,KAAK,IAAIV,CAAC,CAACC,YAAY,CAACS,KAAK;IAE3D,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC,MAAME,IAAI,GAAGJ,KAAK,CAACE,CAAC,CAAC;MACrB,IAAIE,IAAI,CAACC,IAAI,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;QACrC,MAAMC,IAAI,GAAGH,IAAI,CAACI,SAAS,CAAC,CAAC;QAC7B,MAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;;QAE1C;QACA,MAAMK,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QACzCF,GAAG,CAACG,GAAG,GAAGN,QAAQ;QAClBrB,MAAM,CAACK,OAAO,CAACuB,WAAW,CAACJ,GAAG,CAAC;MACjC;IACF;EACF,CAAC;EAED,oBACE3B,OAAA;IACEgC,GAAG,EAAE7B,MAAO;IACZ8B,SAAS,EAAC,eAAe;IACzBC,SAAS,EAAC,MAAM;IAChBC,WAAW,EAAE/B,eAAgB;IAC7BgC,SAAS,EAAEzB,aAAc;IACzB0B,OAAO,EAAExB,iBAAkB;IAC3ByB,MAAM,EAAEzB,iBAAkB;IAAA0B,QAAA,EAC3B;EAED;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV,CAAC;AAACzC,EAAA,CA/CID,YAAY;AAAA2C,EAAA,GAAZ3C,YAAY;AAiDlB,eAAeA,YAAY;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}